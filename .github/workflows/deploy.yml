name: Build & Deploy Hugo site

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  # 🔒 ΠΙΝΑΡΟΥΜΕ την έκδοση του theme που θα γίνεται cache
  THEME_REF: v0.11.0
  THEME_NAME: ananke
  THEME_REPO: https://github.com/theNewDynamic/gohugo-theme-ananke.git
  SITE_BASEURL: https://s4kmedia.github.io/nba-eurozone/

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.151.0'
          extended: true

      # ✅ Cache το τοπικό theme (γρηγορότερα builds)
      - name: Cache Hugo theme
        id: cache-theme
        uses: actions/cache@v3
        with:
          path: themes/${{ env.THEME_NAME }}
          key: ananke-${{ env.THEME_REF }}-${{ runner.os }}

      # Clone ΜΟΝΟ αν δεν υπάρχει cache
      - name: Fetch Ananke theme (local, pinned)
        if: steps.cache-theme.outputs.cache-hit != 'true'
        run: |
          rm -rf themes/${THEME_NAME}
          mkdir -p themes
          git clone --depth=1 --branch "${THEME_REF}" "${THEME_REPO}" "themes/${THEME_NAME}"
          test -f "themes/${THEME_NAME}/theme.toml" && echo "Theme ready."

      # Debug για να βλέπουμε config & περιεχόμενο
      - name: Show config tree (debug)
        run: |
          echo "== CONFIG =="
          find config -maxdepth 2 -type f -print || true
          echo "== ROOT =="
          ls -la
          echo "== THEMES =="
          ls -la themes || true
          echo "== Grep for theme =="
          grep -R "^theme" -n || true

      # Καθάρισμα cache (ασφαλές)
      - name: Clean Hugo cache
        run: |
          rm -rf ~/.cache/hugo_cache ~/.hugo_cache _vendor || true

      - name: Build
        env:
          HUGO_ENVIRONMENT: "production"
        run: hugo --gc --minify --baseURL "${SITE_BASEURL}"

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-24.04
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
